{"version":3,"sources":["assets/NewHorizons.png","pages/GamePage/GamePage.js","pages/Header/Header.js","pages/HomePage/HomePage.js","App.js","index.js"],"names":["module","exports","API_URL","GamePage","state","villager","villagerNames","userLife","userPoint","lifeLabel","message","round","getVillager","villagerId","Math","floor","random","axios","get","then","result","villagerName","data","name","villagerImage","image_uri","villagerIcon","icon_uri","setState","image","icon","catch","err","console","log","getOtherVillager","otherVillagerId","otherVillagerName","nextVillager","e","preventDefault","this","prevState","setTimeout","shuffledArray","sort","notPlayingClass","gameOverStyle","gameOverButton","gameOverClass","className","date","Date","now","onComplete","timeIsOut","autoStart","key","renderer","hours","minutes","seconds","completed","src","alt","map","i","onClick","letsPlay","window","location","reload","to","Component","Header","autoPlay","loop","logo","React","HomePage","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33e24205.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/NewHorizons.ee6b4980.png\";","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport \"./GamePage.scss\";\nimport Countdown from 'react-countdown';\n\nconst API_URL = 'http://acnhapi.com/v1/villagers/';\n\nclass GamePage extends Component {\n    state = {\n        villager: {},\n        villagerNames: [],\n        userLife: 5,\n        userPoint: 0,\n        lifeLabel:\"game-card__life\",\n        message: \"\",\n        round: 0\n    }\n\n    getVillager = () => {\n        let villagerId = (Math.floor(Math.random() * 391) + 1);\n\n        axios\n            .get(API_URL + villagerId)\n            .then(result => {\n                let villagerName = result.data.name['name-USen'];\n                let villagerImage = result.data.image_uri;\n                let villagerIcon =result.data.icon_uri;\n                this.setState({\n                    villager: {\n                        name: villagerName,\n                        image: villagerImage,\n                        icon: villagerIcon\n                    },\n                    villagerNames: [...this.state.villagerNames, villagerName],\n                    round: this.state.round+1\n                })\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n\n    getOtherVillager = () => {\n        let otherVillagerId = (Math.floor(Math.random() * 391) + 1);\n        axios\n            .get(API_URL + otherVillagerId)\n            .then(result => {\n                let otherVillagerName = result.data.name['name-USen'];\n\n                this.setState({\n                    villagerNames: [...this.state.villagerNames, otherVillagerName]\n                })\n            })\n    }\n\n    componentDidMount() {\n\n        this.getVillager();\n        this.getOtherVillager();\n        this.getOtherVillager();\n        this.getOtherVillager();\n    }\n\n    letsPlay(name) {\n        if (name === this.state.villager.name) {\n            this.setState(prevState => {\n                return {\n                    userPoint: prevState.userPoint + 1,\n                    message:`You guessed it right! This is ${name}.`\n                }\n            })\n            setTimeout(() => {\n                this.setState({\n                    villager: {},\n                    villagerNames: [],\n                    message: \"\"\n                })\n                this.getVillager();\n                this.getOtherVillager();\n                this.getOtherVillager();\n                this.getOtherVillager();\n            }, 3000);\n\n        } else if (this.state.userLife === 1) {\n            this.setState({\n                lifeLabel:\"hide__no-life\",\n                userLife: 0,\n                message: \"Game Over!\"\n            }) \n        \n        } else {\n            this.setState(prevState => {\n                return {                    \n                villager: {},\n                villagerNames: [],\n                userLife: prevState.userLife - 1,\n                message: \"\"\n                }\n            })\n            this.getVillager();\n            this.getOtherVillager();\n            this.getOtherVillager();\n            this.getOtherVillager();\n        }\n    }\n\n    nextVillager = (e) => {\n        this.setState({\n            villager: {},\n            villagerNames: [],\n            message: \"\"\n        })\n\n        e.preventDefault();\n        this.getVillager();\n        this.getOtherVillager();\n        this.getOtherVillager();\n        this.getOtherVillager();\n    }\n\n    timeIsOut() {\n        if (this.state.userLife === 1) {\n            this.setState({\n                lifeLabel:\"hide__no-life\",\n                userLife: 0,\n                message: \"Game Over!\"\n            }) \n        } else if (this.state.userLife > 1) {\n            this.setState({\n                villager: {},\n                villagerNames: [],\n                message: \"\",\n                userLife: this.state.userLife-1\n            })\n    \n            this.getVillager();\n            this.getOtherVillager();\n            this.getOtherVillager();\n            this.getOtherVillager();\n        }\n    }\n\n    render() {\n\n        let shuffledArray = (this.state.villagerNames).sort(() => Math.random() - 0.5);\n        \n        let notPlayingClass = \"\";\n        let gameOverStyle = \"\";\n        let gameOverButton = \"\";\n        let gameOverClass = \"gameOver\";\n        if (this.state.userLife === 0) {\n            notPlayingClass = \"notPlaying\";\n            gameOverStyle = \"gameOverStyle\";\n            gameOverButton = \"gameOverButton\";\n            gameOverClass = \"\";\n        }\n\n        return (\n            <div className=\"game\">\n                <div className={\"game-card \" + notPlayingClass}>\n                    <div className=\"game-card__image-wrapper timer\">\n                        <h2><Countdown date={Date.now() + 15000} onComplete={() => this.timeIsOut()} autoStart={true} key={this.state.round} renderer={({ hours, minutes, seconds, completed }) => <span>{seconds} seconds left</span>} /></h2>\n\n                        <img src={this.state.villager.image} className=\"game-card__image\" alt=\"\">\n                        </img>\n                        <p className=\"game-card__correctAnswer\">{this.state.message}</p>\n                    <div className=\"game-card__question-wrapper\">\n                        <img src={this.state.villager.icon} className=\"game-card__icon\" alt=\"\"/>\n                        <p className='game-card__question'>\n                            Who is this villager? \n                        </p>\n\n                    </div>\n                    <div className=\"game-card__answer-wrapper\">\n                        {shuffledArray.map((name, i) => {\n                            return (\n                                <p key={i} className=\"game-card__answer game-card__answer-one\" onClick={() => this.letsPlay(name)}>\n                                    {name}\n                                </p>\n                            )\n                            })}\n                    </div>\n                </div>\n                </div>\n                <div className={\"game-card \" + gameOverClass + gameOverStyle}>\n                    <h3>Game Over</h3>\n                </div>\n                <div className={\"game-card \" + gameOverClass}>\n                    <Link onClick={() => window.location.reload()} to=\"/game\" className={\"game-card \" + gameOverButton}>\n                        Play Again!\n                    </Link> \n                </div>\n                <div className=\"game-card__point\">\n                    Points\n                    <br/>\n                    {this.state.userPoint}\n                </div>\n                <div className={this.state.lifeLabel}>\n                    Life\n                    <br/>\n                    {this.state.userLife}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default GamePage;","import React from 'react';\nimport './Header.scss';\nimport logo from '../../assets/NewHorizons.png';\nimport {Link} from 'react-router-dom';\nclass Header extends React.Component {\n   render(){\n      return (\n         <div className=\"homepage__title\">\n            <audio src=\"http://acnhapi.com/v1/hourly/3\" autoPlay loop className=\"music\"/>\n            <Link to=\"/\">\n               <img src={logo} className=\"homepage__logo\" alt=\"homepage-logo\" />\n            </Link>\n         </div>   \n\n      )\n   }\n}\nexport default Header;","import React from 'react';\nimport './HomePage.scss';\nimport {Link} from 'react-router-dom';\nimport Header from '../Header/Header';\n\nfunction HomePage() {\n  return (\n   <>\n      <Header/>\n      <main className=\"homepage\">\n         <Link to=\"/game\">\n            <button className=\"homepage__button-game\">\n               Start Game\n            </button>\n         </Link>\n      </main>\n   </>\n  )\n}\n\nexport default HomePage;\n","import React from 'react';\nimport './App.scss';\nimport GamePage from './pages/GamePage/GamePage';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport HomePage from './pages/HomePage/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" exact component={HomePage}/>\n          <Route path=\"/game\" component={GamePage}/>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}